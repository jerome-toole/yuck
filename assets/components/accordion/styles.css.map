{"version":3,"sources":["styles/3-pattern-mixins/_grid-classes.scss","styles/1-tools/mixins/_grid.scss","components/accordion/styles.css","styles/1-tools/mixins/_flex-grid.scss","components/accordion/styles.scss","styles/3-pattern-mixins/_alignment.scss","styles/1-tools/mixins/_no-margins.scss","styles/1-tools/mixins/_button-reset.scss","styles/1-tools/mixins/_interact.scss","styles/3-pattern-mixins/_button-styles.scss"],"names":[],"mappings":"AAAA,MCEI,kCAAA,CADA,YAAA,CAEA,gEAAA,CACA,4BCCJ,CFFI,gBCqBA,8FChBJ,CFAA,WGQI,kCAAA,CAFA,YAAA,CACA,kBAAA,CAEA,4BDFJ,CCKI,2EA0BA,8GDzBJ,CCQI,mGAII,UDNR,CEzBA,WACI,+FAAA,CACA,4CAAA,CACA,mDAAA,CACA,mCAAA,CACA,+BF4BJ,CExBI,kBCmBA,gBAAA,CADA,iBAAA,CAHI,yBHcR,CEzBI,mBAGI,iDFyBR,CIjCI,gCACI,YJmCR,CIvBI,+BACI,eJyBR,CE5BI,oBCbA,gBAAA,CADA,iBAAA,CAHI,2BAAA,CDoBA,0CF+BR,CE5BI,kBACI,4CF8BR,CE3BI,iBACI,+CF6BR,CE3BQ,0BAII,QAAA,CCpCJ,uCAAA,CDmCI,SF+BZ,CE3BQ,yBAKI,kBAAA,CG1BR,wBAAA,CH8BQ,eAAA,CG/BR,QAAA,CAEA,eAAA,CACA,aAAA,CH6BQ,8BAAA,CG5BR,cAAA,CHqBQ,YAAA,CGnBR,mBAAA,CACA,iBAAA,CACA,mBAAA,CHoBQ,6BAAA,CGnBR,sBAAA,CACA,mBAAA,CHoBQ,QAAA,CG/BR,SAAA,CH8BQ,2CAAA,CAIA,eAAA,CGtBR,sBAAA,CHeQ,UF8CZ,CM1FI,+DDgCI,wBAAA,CACA,aL6DR,CMxFQ,qBADJ,+BD2BI,wBAAA,CACA,aLkEN,CACF,CKhEI,+BACI,gBAAA,CACA,iBLkER,CE1CgB,8HAEI,uDAAA,CADA,+CAAA,CAEA,iCFiDpB,CE/CoB,4EACI,wBFiDxB,CE3CQ,yBACI,6CAAA,CACA,8CAAA,CKrBR,gDAAA,CACA,4CAAA,CACA,mCAAA,CAEA,uIAAA,CAKA,mIAAA,CAKA,0CAAA,CLWQ,2BFwDZ,CEtDY,+BACI,2DAAA,CAAA,mDAAA,CACA,2EFwDhB,CEnDY,8BAGI,0BAAA,CACA,uDFmDhB,CIvII,2CACI,YJyIR,CI7HI,0CACI,eJ+HR","file":"styles.css","sourcesContent":[".grid {\n    @include grid;\n\n    &--auto-fit {\n        @include grid--auto-fit;\n    }\n}\n\n.flex-grid {\n    @include flex-grid;\n\n    &--auto {\n        @include flex-grid--auto;\n    }\n}\n","@mixin grid($columns: null, $columns--m: null, $columns--l: null) {\n    display: grid;\n    column-gap: var(--grid--column-gap);\n    grid-template-columns: repeat(var(--grid--columns), minmax(0, 1fr));\n    row-gap: var(--grid--row-gap);\n\n    @if ($columns) {\n        --grid--columns: #{$columns};\n    }\n\n    @if ($columns--m) {\n        @include mq(medium) {\n            --grid--columns: #{$columns--m};\n        }\n    }\n\n    @if ($columns--l) {\n        @include mq(large) {\n            --grid--columns: #{$columns--l};\n        }\n    }\n}\n\n@mixin grid--auto-fit {\n    grid-template-columns: repeat(auto-fill, minmax(min(var(--grid--auto--min, #{rem(250)}), 100%), 1fr));\n}\n",".grid {\n  display: grid;\n  column-gap: var(--grid--column-gap);\n  grid-template-columns: repeat(var(--grid--columns), minmax(0, 1fr));\n  row-gap: var(--grid--row-gap);\n}\n.grid--auto-fit {\n  grid-template-columns: repeat(auto-fill, minmax(min(var(--grid--auto--min, 15.625rem), 100%), 1fr));\n}\n\n.flex-grid {\n  display: flex;\n  flex-flow: row wrap;\n  column-gap: var(--grid--column-gap);\n  row-gap: var(--grid--row-gap);\n}\n.flex-grid > *,\n.flex-grid > :first-child,\n.flex-grid > :last-child,\n.flex-grid > * + * {\n  width: calc(100% / var(--grid--columns) - var(--grid--column-gap) + var(--grid--column-gap) / var(--grid--columns));\n}\n.flex-grid--auto > *,\n.flex-grid--auto > :first-child,\n.flex-grid--auto > :last-child,\n.flex-grid--auto > * + * {\n  width: auto;\n}\n\n.accordion {\n  --accordion--items--border-y: var(--border-width--s) solid hsla(var(--color--brand-1--hsl), 0.15);\n  --accordion--item--padding-y: var(--space--s);\n  --accordion--item--panel--padding-y: var(--space--s);\n  --accordion--button--size: 2.1875rem;\n  --accordion--icon--size: 0.75rem;\n}\n.accordion__inner {\n  max-width: var(--width--s);\n  margin-right: auto;\n  margin-left: auto;\n}\n.accordion__header {\n  margin-bottom: var(--block--header--margin-bottom);\n}\n.accordion__header > *:first-child {\n  margin-top: 0;\n}\n.accordion__header > *:last-child {\n  margin-bottom: 0;\n}\n.accordion__heading {\n  max-width: var(--width--xxs);\n  margin-right: auto;\n  margin-left: auto;\n  text-align: var(--block--header--alignment);\n}\n.accordion__items {\n  border-top: var(--accordion--items--border-y);\n}\n.accordion__item {\n  border-bottom: var(--accordion--items--border-y);\n}\n.accordion__item__heading {\n  max-width: var(--width--responsive--xxs);\n  margin-right: auto;\n  margin-left: auto;\n  padding: 0;\n  margin: 0;\n}\n.accordion__item__header {\n  padding: 0;\n  border: 0;\n  background-color: transparent;\n  border-radius: 0;\n  color: inherit;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: inherit;\n  font-weight: inherit;\n  letter-spacing: inherit;\n  line-height: inherit;\n  text-transform: inherit;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding: var(--accordion--item--padding-y) 0;\n  margin: 0;\n  background: none;\n  color: var(--color--foreground);\n  text-align: left;\n}\n.accordion__item__header:focus, .accordion__item__header:active {\n  background-color: transparent;\n  color: inherit;\n}\n@media (hover: hover) {\n  .accordion__item__header:hover {\n    background-color: transparent;\n    color: inherit;\n  }\n}\n.accordion__item__header:focus {\n  box-shadow: unset;\n  outline-width: 5px;\n}\n.accordion__item__header:hover .accordion__item__button {\n  border-color: var(--button--border-color--hover);\n  background-color: var(--button--background-color--hover);\n  color: var(--button--color--hover);\n}\n.accordion__item__header[aria-expanded=true] .accordion__item__button {\n  border-color: var(--button--border-color--hover);\n  background-color: var(--button--background-color--hover);\n  color: var(--button--color--hover);\n}\n.accordion__item__header[aria-expanded=true] .accordion__item__button::after {\n  transform: rotate(180deg);\n}\n.accordion__item__button {\n  --button--size: var(--accordion--button--size);\n  --mask-icon--size: var(--accordion--icon--size);\n  --button--background-color: var(--color--brand-4);\n  --button--border-color: var(--color--brand-4);\n  --button--color: var(--color--white);\n  --button--background-color--hover: hsl(\n      var(--color--brand-4--h),\n      calc(var(--color--brand-4--s) * 0.75),\n      calc(var(--color--brand-4--l) * 0.75)\n  );\n  --button--border-color--hover: hsl(\n      var(--color--brand-4--h),\n      calc(var(--color--brand-4--s) * 0.75),\n      calc(var(--color--brand-4--l) * 0.75)\n  );\n  --button--color--hover: var(--color--white);\n  margin-left: var(--space--s);\n}\n.accordion__item__button::after {\n  mask-image: url(../../images/icons/chevron-down.svg);\n  transition: transform var(--transition--duration) var(--transition--ease) 0s;\n}\n.accordion__item__panel-inner {\n  max-width: var(--width--xs);\n  padding-bottom: var(--accordion--item--panel--padding-y);\n}\n.accordion__item__panel-inner > *:first-child {\n  margin-top: 0;\n}\n.accordion__item__panel-inner > *:last-child {\n  margin-bottom: 0;\n}","@charset 'UTF-8';\n\n/// Mimics grid gap behaviour by creating negative margins on the top and left\n/// of the flex container and then adding top and left margins to child elements.\n///\n/// In some contexts, the mixin must be used inside a wrapper or the negative\n/// margins will throw the layout off.\n///\n/// @example scss\n///    @include flex-grid-row;\n///\n/// @access public\n\n@mixin flex-grid {\n    display: flex;\n    flex-flow: row wrap;\n    column-gap: var(--grid--column-gap);\n    row-gap: var(--grid--row-gap);\n\n    // Override child selectors used in mixins such as list-reset()\n    > *,\n    > :first-child,\n    > :last-child,\n    > * + * {\n        @include flex-grid-item;\n    }\n}\n\n@mixin flex-grid--auto {\n    > *,\n    > :first-child,\n    > :last-child,\n    > * + * {\n        width: auto;\n    }\n}\n\n/// Set items to fit a column width provided by --grid--columns and add the\n/// grid--gap between them\n///\n/// @example scss\n///    @include flex-grid-item;\n///\n/// @access public\n\n@mixin flex-grid-item {\n    width: calc((100% / var(--grid--columns)) - var(--grid--column-gap) + (var(--grid--column-gap) / var(--grid--columns)));\n}\n","@import '../../core';\n\n.accordion {\n    --accordion--items--border-y: var(--border-width--s) solid hsla(var(--color--brand-1--hsl), 0.15);\n    --accordion--item--padding-y: var(--space--s);\n    --accordion--item--panel--padding-y: var(--space--s);\n    --accordion--button--size: #{rem(35)};\n    --accordion--icon--size: #{rem(12)};\n\n    $this: &;\n\n    &__inner {\n        @include align-width--s(false);\n    }\n\n    &__header {\n        @include no-first-last-margin;\n\n        margin-bottom: var(--block--header--margin-bottom);\n    }\n\n    &__heading {\n        @include align-width--xxs(false);\n\n        text-align: var(--block--header--alignment);\n    }\n\n    &__items {\n        border-top: var(--accordion--items--border-y);\n    }\n\n    &__item {\n        border-bottom: var(--accordion--items--border-y);\n\n        &__heading {\n            @include align-width--xxs;\n\n            padding: 0;\n            margin: 0;\n        }\n\n        &__header {\n            @include button-reset-hard;\n\n            display: flex;\n            width: 100%;\n            align-items: center;\n            justify-content: space-between;\n            padding: var(--accordion--item--padding-y) 0;\n            margin: 0;\n            background: none;\n            color: var(--color--foreground);\n            text-align: left;\n\n            &:hover {\n                #{$this}__item__button {\n                    border-color: var(--button--border-color--hover);\n                    background-color: var(--button--background-color--hover);\n                    color: var(--button--color--hover);\n                }\n            }\n\n            &[aria-expanded='true'] {\n                #{$this}__item__button {\n                    border-color: var(--button--border-color--hover);\n                    background-color: var(--button--background-color--hover);\n                    color: var(--button--color--hover);\n\n                    &::after {\n                        transform: rotate(180deg);\n                    }\n                }\n            }\n        }\n\n        &__button {\n            --button--size: var(--accordion--button--size);\n            --mask-icon--size: var(--accordion--icon--size);\n\n            @include button--theme-3;\n\n            margin-left: var(--space--s);\n\n            &::after {\n                mask-image: url(#{asset-path('images/icons/chevron-down.svg')});\n                transition: transition(transform);\n            }\n        }\n\n        &__panel {\n            &-inner {\n                @include no-first-last-margin;\n\n                max-width: var(--width--xs);\n                padding-bottom: var(--accordion--item--panel--padding-y);\n            }\n        }\n    }\n}\n","@mixin align-width--xxs($responsive: true) {\n    @if ($responsive) {\n        max-width: var(--width--responsive--xxs);\n    } @else {\n        max-width: var(--width--xxs);\n    }\n\n    margin-right: auto;\n    margin-left: auto;\n}\n\n@mixin align-width--xs($responsive: true) {\n    @if ($responsive) {\n        max-width: var(--width--responsive--s);\n    } @else {\n        max-width: var(--width--s);\n    }\n\n    margin-right: auto;\n    margin-left: auto;\n}\n\n@mixin align-width--s($responsive: true) {\n    @if ($responsive) {\n        max-width: var(--width--responsive--s);\n    } @else {\n        max-width: var(--width--s);\n    }\n\n    margin-right: auto;\n    margin-left: auto;\n}\n\n@mixin align-width--m($responsive: true) {\n    @if ($responsive) {\n        max-width: var(--width--responsive--m);\n    } @else {\n        max-width: var(--width--m);\n    }\n\n    margin-right: auto;\n    margin-left: auto;\n}\n\n@mixin align-width--l($responsive: true) {\n    @if ($responsive) {\n        max-width: var(--width--responsive--l);\n    } @else {\n        max-width: var(--width--l);\n    }\n\n    margin-right: auto;\n    margin-left: auto;\n}\n\n@mixin align-width--full-bleed {\n    max-width: 100%;\n    margin-right: auto;\n    margin-left: auto;\n}\n\n@mixin align-width--right {\n    max-width: var(--width--responsive--s);\n    margin: var(--space--responsive--s) auto;\n\n    @include mq(medium) {\n        max-width: calc(var(--width--s) / 2);\n        margin-top: var(--space--m);\n        margin-right: calc(50% - (var(--width--s) / 2));\n        margin-left: var(--space--m);\n        float: right;\n    }\n}\n\n@mixin align-width--left {\n    max-width: var(--width--responsive--s);\n    margin: var(--space--responsive--s) auto;\n\n    @include mq(medium) {\n        max-width: calc(var(--width--s) / 2);\n        margin-top: var(--space--m);\n        margin-right: var(--space--m);\n        margin-left: calc(50% - (var(--width--s) / 2));\n        float: left;\n    }\n}\n","@charset 'UTF-8';\n\n/// Remove the top margin applied to the first child of this element.\n///\n/// @example scss\n///    @include no-first-margin;\n///\n/// @access public\n\n@mixin no-first-margin {\n    > *:first-child {\n        margin-top: 0;\n    }\n}\n\n/// Remove the bottom margin applied to the last child of this element.\n///\n/// @example scss\n///    @include no-first-margin;\n///\n/// @access public\n\n@mixin no-last-margin {\n    > *:last-child {\n        margin-bottom: 0;\n    }\n}\n\n/// Remove the top margin from the first child element and bottom margin from\n/// the last child element.\n///\n/// @example scss\n///    @include no-first-last-margin;\n///\n/// @access public\n\n@mixin no-first-last-margin {\n    @include no-first-margin;\n    @include no-last-margin;\n}\n","@charset 'UTF-8';\n\n/// Reset the default styles applied to buttons\n///\n/// @example scss\n///    @include button-reset;\n///\n/// @access public\n\n// TODO refine button-reset and document usage\n@mixin button-reset {\n    // Remove default button styles\n    border: 0;\n    cursor: pointer;\n}\n\n@mixin button-reset-hard {\n    // Remove our button styles\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    border-radius: 0;\n    color: inherit;\n    cursor: pointer;\n\n    font-family: inherit;\n    font-size: inherit;\n    font-weight: inherit;\n    letter-spacing: inherit;\n    line-height: inherit;\n    text-transform: inherit;\n\n    @include interact {\n        background-color: transparent;\n        color: inherit;\n    }\n\n    &:focus {\n        box-shadow: unset;\n        outline-width: 5px;\n    }\n}\n","@mixin interact {\n    &:focus,\n    &:active {\n        @content;\n    }\n\n    &:hover {\n        @media (hover: hover) {\n            @content;\n        }\n    }\n}\n","@mixin button {\n    --focus--color: var(--button--border-color);\n\n    @include typestyle-button;\n\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: var(--button--padding-y) var(--button--padding-x);\n    border-width: var(--button--border-width);\n    border-style: solid;\n    border-color: var(--button--border-color);\n    background-color: var(--button--background-color);\n    border-radius: var(--button--border-radius);\n    color: var(--button--color);\n    cursor: pointer;\n    font-size: var(--button--font-size, inherit);\n    gap: var(--button--gap);\n    line-height: inherit;\n    text-align: center;\n    text-decoration: none; // [1]\n    transition: transition(color, background-color, border-color, box-shadow, transform);\n    user-select: none;\n\n    @include interact {\n        border-color: var(--button--border-color--hover);\n        background-color: var(--button--background-color--hover);\n        color: var(--button--color--hover);\n        text-decoration: none;\n    }\n\n    &:focus {\n        @include focus--1;\n    }\n\n    .has-brand-2-background-color &:not(.has-background) {\n        --button--background-color--hover: var(--color--brand-2);\n        --button--border-color--hover: var(--color--brand-2);\n    }\n\n    // .has-brand-2-background-color &:not(.has-background) {\n    //     @include button--theme-2;\n    // }\n}\n\n@mixin button--theme-2 {\n    --button--background-color: var(--color--brand-5);\n    --button--border-color: var(--color--brand-5);\n    --button--color: var(--color--brand-2);\n\n    --button--background-color--hover: var(--color--brand-1);\n    --button--border-color--hover: var(--color--brand-1);\n    --button--color--hover: var(--color--brand-2);\n}\n\n@mixin button--theme-3 {\n    --button--background-color: var(--color--brand-4);\n    --button--border-color: var(--color--brand-4);\n    --button--color: var(--color--white);\n\n    --button--background-color--hover: hsl(\n        var(--color--brand-4--h),\n        calc(var(--color--brand-4--s) * 0.75),\n        calc(var(--color--brand-4--l) * 0.75)\n    );\n    --button--border-color--hover: hsl(\n        var(--color--brand-4--h),\n        calc(var(--color--brand-4--s) * 0.75),\n        calc(var(--color--brand-4--l) * 0.75)\n    );\n    --button--color--hover: var(--color--white);\n}\n\n@mixin button--small {\n    --button--padding-y: var(--button--small--padding-y);\n    --button--padding-x: var(--button--small--padding-x);\n}\n\n@mixin button--label {\n    @include button--small;\n    @include typestyle-small;\n}\n\n// Used for square buttons containing a single number or icon\n@mixin button--square {\n    min-width: var(--button--size, 2em);\n    min-height: var(--button--size, 2em);\n    padding: 0 0.3em;\n    border-radius: var(--border-radius--s);\n}\n\n@mixin button--arrow {\n    --button--icon-size: 0.9em;\n\n    @include button--with-icon;\n\n    @include interact {\n        &::after {\n            transform: translateX(15%);\n        }\n    }\n\n    &::after {\n        mask-image: url(#{asset-path('images/icons/chevron-right.svg')});\n        transform: translateX(0);\n        transition: transition(transform);\n    }\n}\n\n@mixin button--icon($pseudo: after) {\n    @include mask-icon($pseudo: after, $position: 'absolute');\n\n    position: relative;\n    overflow: hidden;\n    text-indent: -9999px;\n}\n\n@mixin button--with-icon($pseudo: after, $transition: false) {\n    @include mask-icon;\n\n    &::#{$pseudo} {\n        width: var(--button--icon-size, 1em);\n        height: var(--button--icon-size, 1em);\n    }\n}\n"]}